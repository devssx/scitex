#
# SciTE settings for VNbs (WindowsScriptingHost) code.
##imJuli2016, Marcedo@HabmalneFrage.de;

# --- Handle .vbs (vbScript)

# VBS: VBScript, DSM: Visual[ex. Dev] Studio macro *.vbs;*.dsm;*.wsf;*.wsf;*.hta;*.htc;*.api
file.patterns.winscript=*.vbs;*.wsf;*.api
filter.winscript=VBScript (vbs wsf)|$(file.patterns.winscript)|

# ---- * Wildcard is used to collect marked properties
# ----  used to dynamically build the Language Menu. the following ones were added to vb.properties
*filter.winscript=$(filter.winscript)
*source.patterns.winscript=$(file.patterns.winscript);

# Uncomment if you want to display vbScript in the Language menu
*language.winScript=VBScript|vbs|Alt+F12|

lexer.$(file.patterns.winscript)=vbscript
; word.chars.winscript= $(chars.alpha)$(chars.numeric)-'#
; word.characters.$(file.patterns.winscript)=$(word.chars.winscript)

autocomplete.vbscript.typesep=?

# --------- Syntax Highlitening
# ---- Begin wsh.keywords
# Code Flow & Methods use style2

# Keywords, operators, statements, data types and some words in .frm files
keywordclass.vbs=\
and as boolean byref byte byval call case class const \
currency debug dim do double each else elseif empty end \
endif enum eqv event exit false for function get goto \
if imp implements in integer is let like long loop \
lset me mod new next not nothing null on option \
optional or paramarray preserve private public raiseevent redim rem resume \
rset select set shared single static stop sub then to \
true type typeof until variant wend while with xor \

keywordclass.vb6=\
addressof alias and as attribute base begin binary boolean byref byte byval call case cdbl \
cint clng compare const csng cstr currency date decimal declare defbool defbyte defcur \
defdate defdbl defdec defint deflng defobj defsng defstr defvar dim do double each else \
elseif empty end enum eqv erase error event exit explicit false for friend function get \
global gosub goto if imp implements in input integer is len let lib like load lock long \
loop lset me mid midb mod new next not nothing null object on option optional or paramarray \
preserve print private property public raiseevent randomize redim rem resume return rset \
seek select set single static step stop string sub text then time to true type typeof \
unload until variant wend while with withevents xor

keywordclass.wshFlow= \
binary byref byval date dim sub end function do loop else empty error false for get \
input is len let lock me mid new next nothing null on option optional set step string then time to true withevents if call case  while not select elseif or

keywordclass.wshMethods= \
addprinterconnection addwindowsprinterconnection appactivate close connectobject count createobject createscript createshortcut \
disconnectobject enumnetworkdrives enumprinterconnections exec execute exists expandenvironmentstrings \
getobject getresource logevent mapnetworkdrive popup quit read readall readline regdelete regread regwrite \
remove removenetworkdrive removeprinterconnection run save sendkeys setdefaultprinter showusage sign signfile \
specialfolders skip skipline sleep terminate verify verifyfile write writeblanklines writeline  stderr stdin stdout\
item status line hotkey iconlocation environment windowstyle workingdirectory

keywordclass.wshFunctions= \
abs array asc atn cbool cbyte ccur cdate cdbl chr cint clng conversion cos csng cstr date dateadd \
datediff datepart dateserial datevalue day escape eval exp filter formatcurrency formatdatetime formatnumber \
formatpercent getlocale getref hex hour inputbox instr instrrev int isarray isdate isempty isnull isnumeric \
isobject join lbound lcase left len loadpicture log trim math mid minute month monthname msgbox now oct replace \
rgb right rnd round scriptengine scriptenginebuildversion scriptenginemajorversion scriptengineminorversion second \
setlocale sgn sin space split sqr strcomp string strreverse tan time timer timeserial timevalue typename ubound ucase \
unescape vartype weekday weekdayname year

keywordclass.wshproperties= \
arguments atendofline atendofstream buildversion character column computername currentdirectory description  \
error exitcode fullname interactive length line name named number processid relativepath scriptfullname scriptname \
source sourcetext status targetpath unnamed userdomain username id helpstring type required guid progID \
hookevents language src many width height visible

# objects / tags
keywordclass.wshObjects= \
<?job?> <?xml?> <description> <example> <job> <named> <object> <package> <reference> <resource> <runtime> \
<script><named> <unnamed> <usage>  scriptingsigner wscript wsharguments wshcontroller wshenvironment \
wshnamed wshnetwork wshremote wshremoteerror wshscriptexec wshshell wshshortcut wshspecialfolders \
wshunnamed wshurlshortcut  _end _error _start

#https://msdn.microsoft.com/de-de/library/microsoft.visualbasic.constants_fields(v=vs.110).aspx
keywordclass.vbConstants= \
vbabort vbabortretryignore vbapplicationmodal vbarchive vbarray vbback vbbinarycompare vbboolean vbbyte vbcancel \
vbcr vbcritical vbcrlf vbcurrency vbdate vbdecimal vbdefaultbutton1 vbdefaultbutton2 vbdefaultbutton3 vbdirectory \
vbdouble vbempty vbexclamation vbfalse vbfirstfourdays vbfirstfullweek vbfirstjan1 vbformfeed vbfriday vbgeneraldate \
vbget vbhidden vbhide vbhiragana vbignore vbinformation vbinteger vbkatakana vblet vblf vblinguisticcasing vblong \
vblongdate vblongtime vblowercase vbmaximizedfocus vbmethod vbminimizedfocus vbminimizednofocus vbmonday vbmsgboxhelp \
vbmsgboxright vbmsgboxrtlreading vbmsgboxsetforeground vbnarrow vbnewline vbno vbnormal vbnormalfocus vbnormalnofocus \
vbnull vbnullchar vbnullstring vbobject vbobjecterror vbok vbokcancel vbokonly vbpropercase vbquestion vbreadonly vbretry \
vbretrycancel vbsaturday vbset vbshortdate vbshorttime vbsimplifiedchinese vbsingle vbstring vbsunday vbsystem vbsystemmodal \
vbtab vbtextcompare vbthursday vbtraditionalchinese vbtrue vbtuesday vbuppercase vbusedefault vbuserdefinedtype vbusesystem \
vbusesystemdayofweek vbvariant vbverticaltab vbvolume vbwednesday vbwide vbyes vbyesno vbyesnocancel


# ---- End wsh.keywords
# flow of control aka if else do loop ....
keywords.$(file.patterns.winscript)=$(keywordclass.vbs)
keywords2.$(file.patterns.winscript)=$(keywordclass.wshproperties) $(keywordclass.vbConstants)
# specials (objects, Selectors)
keywords3.$(file.patterns.winscript)=$(keywordclass.wshObjects) $(keywordclass.wshMethods)
keywords4.$(file.patterns.winscript)=$(keywordclass.wshFunctions)

# ------- Calltips ( api parameter)
autocomplete.vbscript.start.characters=$(chars.alpha)$(chars.numeric)$_<
autocomplete.vbscript.fillups=(
autocomplete.vbscript.ignorecase=1

#------ \t\n makes a calltip multiline
calltip.vbscript.use.escapes=0
calltip.vbscript.word.characters=$(chars.alpha)$(chars.numeric)
calltip.vbscript.ignorecase=1
calltip.vbscript.end.definition=)
calltip.vbscript.parameters.start=@ (
calltip.vbscript.parameters.separators=,
calltip.vbscript.parameters.end=@)

api.$(file.patterns.winscript)=\
$(SciteDefaultHome)/api/vbs_11_2016.api

# -------- Comments
comment.block.vbscript='~

# -------- Indentation
statement.indent.$(file.patterns.winscript)=4 else elseif for  if while
indent.maintain.$(file.patterns.winscript)=4
#statement.lookback.$(file.patterns.winscript)=20
#comment.block.at.line.start.winscript=1

# ---------Wsh styles

# Default
# VB styles
style.vbscript.32=$(font.base)
# White space
style.vbscript.0=
# Comment
style.vbscript.1=$(colour.code.comment.line),$(font.code.comment.line)
# Number
style.vbscript.2=$(colour.number)
# Keyword
style.vbscript.3=$(colour.keyword)
# String
style.vbscript.4=$(colour.string)
# Preprocessor (directives)
style.vbscript.5=$(colour.preproc)
# Operator
style.vbscript.6=$(colour.operator)
# Identifier
style.vbscript.7=
# Date
style.vbscript.8=$(colour.number)
# End of line where string is not closed
style.vbscript.9=$(style.stringeol)
# Constants
style.vbscript.10=fore:#6F008A
# Prop and Methods
style.vbscript.11=fore:#000000
# VB Functions
style.vbscript.12=fore:#6F008A,bold
# (Dash #)
style.vbscript.13=$(colour.globalclass)
style.vbscript.14=$(colour.globalclass)
#attributes : 
style.vbscript.15=$(colour.keyword)


#Clean | Format code
command.clean.$(file.patterns.winscript)=$(SciteDefaultHome)\tools\CodeFormatter.exe "$(FilePath)"
command.clean.subsystem.$(file.patterns.winscript)=0

# Normal go Comand with wScript, use cScript for console.
command.go.$(file.patterns.winscript)=cscript "$(FilePath)" "$(1)" "$(2)" "$(3)" "$(4)"
command.go.subsystem.$(file.patterns.winscript)=0
#command.is.filter.go.$(file.patterns.wscript)=1

# note we have no real "build"; rather "execute and capture
# compiletime and runtime errors"  subsystem=0 hide window
command.build.$(file.patterns.winscript)=cscript "$(FilePath)"
command.build.subsystem.$(file.patterns.winscript)=0

command.help.$(file.patterns.winscript)=$(CurrentWord)!C:\Program Files\Microsoft Visual Studio\MSDN\2001OCT\1033\MSDN130.COL
command.help.subsystem.$(file.patterns.wscript)=4

#my Command
command.name.0.*.vbs=Format Code
command.0.*.vbs=$(SciteDefaultHome)\tools\CodeFormatter.exe "$(FilePath)"

#My shortcuts
user.shortcuts=\
Ctrl+Shift+B|IDM_BUILD|\
Ctrl+Alt+P|IDM_CLEAN|